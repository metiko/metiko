---
- name: exams
  hosts: all
  become: yes

  tasks:
    - name: apt update
      apt:
        update_cache: true
        cache_valid_time: 3600
        force_apt_get: true

    - name: Add php repository
      apt_repository:
        repo="ppa:ondrej/php"

    - name: Install PHP
      apt: name=php8.1 state=latest

    - name: Install PHP M
      apt: name=php8.1-mbstring state=latest

    - name: Install PHP XML
      apt: name=php-xml state=latest

    - name: Install unzip
      apt: name=unzip state=latest

    - name: Download php-composer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/installer
      
    - name: install composer
      shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
      args:
        creates: /usr/local/bin/composer

    - name: rename composer.phar to composer
      shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer

    - name: make composer executable
      file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file

    - name: install apache2 server
      apt:
        name: apache2
        state: present

    - name: install php curl
      shell: sudo apt-get install php-curl -y

    - name: install php 8.0 repositories
      shell: |
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ondrej/apache2 -y
        sudo add-apt-repository ppa:ondrej/php -y
        sudo apt-get -y install apt-transport-https lsb-release ca-certificates curl
        sudo apt-get install apt-transport-https gnupg2 ca-certificates -y
        sudo apt update -y
        sudo apt install -y php8.0-common php8.0-cli -y
 
    - name: install lamp stack
      apt:
        pkg:
          - php8.0-mysql
          - php8.0-curl
          - php8.0-cgi
          - php8.0-xsl
          - php8.0-gd
          - php8.0-mbstring
          - php8.0-zip
          - php8.0-xmlrpc
          - php8.0-soap
          - php8.0-intl
          - libapache2-mod-php
        state: present

    - name: Installing Mysql  and dependencies
      package:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev
      become: yes

    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: creating mysql user (medium_post)
      mysql_user:
        name: Metikoapp
        password: temitope
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: creating medium_db
      mysql_db:
        name: Laravel
        state: present
   
    - name: Enable remote login to mysql
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      
    - name: Restart mysql
      ansible.builtin.service:
        name: mysql
        state: restarted

    - name: Copy Script to remote
      ansible.builtin.copy:
        src: /home/ubuntu/pgsql.sh
        dest: /home/ubuntu/pgsql.sh
        owner: ubuntu
        group: ubuntu
        mode: '0777'
      
    - name: Execute pgsql script
      command: sh /home/ubuntu/pgsql.sh
#          ignore_errors: true

    - name: Create laravel directory
      ansible.builtin.file:
        state: directory
        path: "/var/www/temi"
        group: "www-data"
        mode: '0775'

#    - name: Clone the project repo into a new directory
 #     git:
 #       repo: https://github.com/f1amy/laravel-realworld-example-app.git
 #       dest: /var/www/temi
 #       clone: true

    - name: Permission for composer Installation
      shell: sudo chmod -R 777 /var/www/temi/

#    - name: editing web.php
#      ansible.builtin.replace:
#        path: /var/www/temi/routes/web.php
#        regexp: '\/\*R'
#        replace: 'R'

 #   - name: editing web.php
  #    ansible.builtin.replace:
  #      path: /var/www/temi/routes/web.php
  #      regexp: ';\*\/'
  #      replace: ';'

    - name: "Composer  install"
      become: false
      composer:
          command: install
          global_command: false
          working_dir: /var/www/temi/

    - name: Change Permissions
      shell: sudo chown -R www-data:www-data /var/www/temi/

    - name: Change permissions for storage
      shell: sudo chmod -R 775 /var/www/temi/storage

    - name: Create .env file for database
      template: src=/var/www/temi/.env.example dest="/var/www/temi/.env"
    
    - name: Run the php artisan key:generate command 
      ansible.builtin.shell:
        cmd: php artisan key:generate
        chdir: "/var/www/temi/"
 

#    - name: To Change artisan file permission
 #     shell: sudo chmod 777 /var/www/temi/artisan

    - name: To generate artisan key
      shell: php /var/www/temi/artisan key:generate

    - name: update and upgrade
      shell: sudo apt update && sudo apt upgrade -y

    - name: clear cache
      shell: php /var/www/temi/artisan config:clear

    - name: run migration artisan migrate
      shell: php /var/www/temi/artisan migrate
#        ignore_errors:  true

    - name: run migration fresh
      shell: php /var/www/temi/artisan migrate:fresh
        #ignore_errors: true

    - name: run migration seed
      shell: php /var/www/temi/artisan migrate --seed
        #ignore_errors: true

    - name: run migration refresh
      shell: php /var/www/temi/artisan migrate:refresh --seed
       # ignore_errors: true

    - name: Remove default apache page
      file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

    - name: Create an apache virtual host configuration file
      ansible.builtin.copy:
        dest: /etc/apache2/sites-available/exam.conf
        content: |
          <VirtualHost *:80>
             ServerAdmin admin@temi.me
             ServerName temi.me
             ServerAlias tmetiko.me
             DocumentRoot /var/www/temi/public
    
             <Directory /var/www/temi/public>
               AllowOverride All
             </Directory>
    
             ErrorLog ${APACHE_LOG_DIR}/error.log
             CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>

    - name: permission for laravel conf file
      shell: sudo chmod -R 777 /etc/apache2/sites-available/exams.conf

    - name: Update a2ensite
      command: a2ensite exams

    - name: Enable the Apache rewrite module
      command:  a2enmod rewrite

      notify:
        - restart apache2

